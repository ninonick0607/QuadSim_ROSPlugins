// Copyright 2021-2024 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from nav_msgs/srv/LoadMap.srv - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "nav_msgs/srv/load_map.h"

// rclUE
#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)

#include "Msgs/ROS2OccupancyGrid.h"

// Generated
#include "ROS2LoadMap.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSLoadMapReq
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString MapUrl;

    FROSLoadMapReq()
    {
    }

    void SetFromROS2(const nav_msgs__srv__LoadMap_Request& in_ros_data)
    {
        MapUrl = UROS2Utils::StringROSToUE<rosidl_runtime_c__String>(in_ros_data.map_url);
    }

    void SetROS2(nav_msgs__srv__LoadMap_Request& out_ros_data) const
    {
        UROS2Utils::StringUEToROS(MapUrl, out_ros_data.map_url);
    }
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSLoadMapRes
{
    GENERATED_BODY()

public:
    static constexpr uint8 RESULT_SUCCESS = 0;
    static constexpr uint8 RESULT_MAP_DOES_NOT_EXIST = 1;
    static constexpr uint8 RESULT_INVALID_MAP_DATA = 2;
    static constexpr uint8 RESULT_INVALID_MAP_METADATA = 3;
    static constexpr uint8 RESULT_UNDEFINED_FAILURE = 255;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FROSOccupancyGrid Map;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    uint8 Result = 0;

    FROSLoadMapRes()
    {
    }

    void SetFromROS2(const nav_msgs__srv__LoadMap_Response& in_ros_data)
    {
        Map.SetFromROS2(in_ros_data.map);

        Result = in_ros_data.result;
    }

    void SetROS2(nav_msgs__srv__LoadMap_Response& out_ros_data) const
    {
        Map.SetROS2(out_ros_data.map);

        out_ros_data.result = Result;
    }
};

UCLASS()
class RCLUE_API UROS2LoadMapSrv : public UROS2GenericSrv
{
    GENERATED_BODY()

public:
    UFUNCTION(BlueprintCallable)
    virtual void Init() override;

    UFUNCTION(BlueprintCallable)
    virtual void Fini() override;

    virtual const rosidl_service_type_support_t* GetTypeSupport() const override;

    // used by client
    UFUNCTION(BlueprintCallable)
    void SetRequest(const FROSLoadMapReq& Request);

    // used by service
    UFUNCTION(BlueprintCallable)
    void GetRequest(FROSLoadMapReq& Request) const;

    // used by service
    UFUNCTION(BlueprintCallable)
    void SetResponse(const FROSLoadMapRes& Response);

    // used by client
    UFUNCTION(BlueprintCallable)
    void GetResponse(FROSLoadMapRes& Response) const;

    virtual void* GetRequest() override;
    virtual void* GetResponse() override;

    UFUNCTION(BlueprintCallable)
    static uint8 CONST_RESULT_SUCCESS()
    {
        return FROSLoadMapRes::RESULT_SUCCESS;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_RESULT_MAP_DOES_NOT_EXIST()
    {
        return FROSLoadMapRes::RESULT_MAP_DOES_NOT_EXIST;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_RESULT_INVALID_MAP_DATA()
    {
        return FROSLoadMapRes::RESULT_INVALID_MAP_DATA;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_RESULT_INVALID_MAP_METADATA()
    {
        return FROSLoadMapRes::RESULT_INVALID_MAP_METADATA;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_RESULT_UNDEFINED_FAILURE()
    {
        return FROSLoadMapRes::RESULT_UNDEFINED_FAILURE;
    }

private:
    virtual FString SrvRequestToString() const override;
    virtual FString SrvResponseToString() const override;

    nav_msgs__srv__LoadMap_Request LoadMap_req;
    nav_msgs__srv__LoadMap_Response LoadMap_res;
};
