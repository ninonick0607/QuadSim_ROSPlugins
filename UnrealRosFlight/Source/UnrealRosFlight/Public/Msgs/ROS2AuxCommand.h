// Copyright 2021-2024 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from rosflight_msgs/msg/AuxCommand.msg - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "rosflight_msgs/msg/aux_command.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2Header.h"
#include "rosidl_runtime_c/primitives_sequence_functions.h"
#include "rosidl_runtime_c/primitives_sequence_functions.h"


// Generated
#include "ROS2AuxCommand.generated.h"

USTRUCT(Blueprintable)
struct UNREALROSFLIGHT_API FROSAuxCommand
{
	GENERATED_BODY()

public:
		static constexpr uint8 AUX_COMMAND_DISABLED = 0;
	static constexpr uint8 AUX_COMMAND_SERVO = 1;
	static constexpr uint8 AUX_COMMAND_MOTOR = 2;


	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FROSHeader Header;

	UPROPERTY(EditAnywhere)
	TArray<uint8> TypeArray;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<float> Values;

	

	FROSAuxCommand()
	{
		TypeArray.SetNumZeroed(14);

		Values.SetNumZeroed(14);

		
	}

	void SetFromROS2(const rosflight_msgs__msg__AuxCommand& in_ros_data)
	{
    	Header.SetFromROS2(in_ros_data.header);

		UROS2Utils::SequenceROSToUEArray<uint8, uint8>(in_ros_data.type_array, TypeArray, 14);

		UROS2Utils::SequenceROSToUEArray<float, float>(in_ros_data.values, Values, 14);

		
	}

	void SetROS2(rosflight_msgs__msg__AuxCommand& out_ros_data) const
	{
    	Header.SetROS2(out_ros_data.header);

		UROS2Utils::ArrayUEToROSSequence<uint8, uint8>(TypeArray, out_ros_data.type_array, 14);

		UROS2Utils::ArrayUEToROSSequence<float, float>(Values, out_ros_data.values, 14);

		
	}
};

UCLASS()
class UNREALROSFLIGHT_API UROS2AuxCommandMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSAuxCommand& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSAuxCommand& Output) const;
	
	virtual void* Get() override;

	UFUNCTION(BlueprintCallable)
	static uint8 CONST_AUX_COMMAND_DISABLED()
	{
		return FROSAuxCommand::AUX_COMMAND_DISABLED;
	}
	UFUNCTION(BlueprintCallable)
	static uint8 CONST_AUX_COMMAND_SERVO()
	{
		return FROSAuxCommand::AUX_COMMAND_SERVO;
	}
	UFUNCTION(BlueprintCallable)
	static uint8 CONST_AUX_COMMAND_MOTOR()
	{
		return FROSAuxCommand::AUX_COMMAND_MOTOR;
	}
	


private:
	virtual FString MsgToString() const override;

	rosflight_msgs__msg__AuxCommand aux_command_msg;
};